//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "transaction")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false, column_type = "Binary(16)")]
    pub id: Vec<u8>,
    #[sea_orm(column_type = "Binary(16)")]
    pub transaction_type_id: Vec<u8>,
    #[sea_orm(column_type = "Double")]
    pub amount: f64,
    #[sea_orm(column_type = "Binary(16)")]
    pub asset_id: Vec<u8>,
    #[sea_orm(column_type = "Binary(16)", nullable)]
    pub destination_asset_id: Option<Vec<u8>>,
    #[sea_orm(column_type = "Binary(16)", nullable)]
    pub expense_id: Option<Vec<u8>>,
    #[sea_orm(column_type = "Binary(16)", nullable)]
    pub contact_id: Option<Vec<u8>>,
    pub note: String,
    pub created_at: Option<DateTimeUtc>,
    pub updated_at: Option<DateTimeUtc>,
    #[sea_orm(column_type = "Binary(16)")]
    pub user_id: Vec<u8>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::asset::Entity",
        from = "Column::AssetId",
        to = "super::asset::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Asset2,
    #[sea_orm(
        belongs_to = "super::asset::Entity",
        from = "Column::DestinationAssetId",
        to = "super::asset::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Asset1,
    #[sea_orm(
        belongs_to = "super::contact::Entity",
        from = "Column::ContactId",
        to = "super::contact::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Contact,
    #[sea_orm(has_many = "super::current_sheet::Entity")]
    CurrentSheet,
    #[sea_orm(
        belongs_to = "super::expense::Entity",
        from = "Column::ExpenseId",
        to = "super::expense::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Expense,
    #[sea_orm(
        belongs_to = "super::transaction_type::Entity",
        from = "Column::TransactionTypeId",
        to = "super::transaction_type::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    TransactionType,
    #[sea_orm(
        belongs_to = "super::user::Entity",
        from = "Column::UserId",
        to = "super::user::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    User,
}

impl Related<super::contact::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Contact.def()
    }
}

impl Related<super::current_sheet::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CurrentSheet.def()
    }
}

impl Related<super::expense::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Expense.def()
    }
}

impl Related<super::transaction_type::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TransactionType.def()
    }
}

impl Related<super::user::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::User.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
